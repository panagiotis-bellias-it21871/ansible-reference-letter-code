---
- name: install postgres
  hosts: all

  pre_tasks:
    - name: "Install packages"
      apt: 
        name: "{{ item }}"
        state: present
      with_items:
        - postgresql
        - postgresql-contrib
        - libpq-dev
        - python3-psycopg2
      become: yes

    - name: Update apt repo and cache on all Debian/Ubuntu boxes
      apt: update_cache=yes force_apt_get=yes cache_valid_time=3600
      become: true
    - name: Upgrade all apt packages
      apt: upgrade=yes force_apt_get=yes
      become: true
    - name: Install Python pip
      apt: name={{ item }} update_cache=true state=present force_apt_get=yes
      with_items:
      - python3-pip
      become: true

    - name: "Install Python packages"
      pip: 
        name: "{{ item }}"
        state: present
      with_items:
        - psycopg2-binary

  tasks:
    - name: "Find out if PostgreSQL is initialized"
      ansible.builtin.stat:
        path: "/var/lib/pgsql/data/pg_hba.conf"
      register: postgres_data

    # - name: "Initialize PostgreSQL"
    #   shell: "postgresql-setup initdb"
    #   when: not postgres_data.stat.exists
 
    - name: "Start and enable services"
      service:
        name: "{{ item }}"
        state: started
        enabled: yes
      with_items:
        - postgresql

    # Error creating database
    - name: "Create app database"
      become: true
      become_user: postgres
      postgresql_db:
        name: "{{ PSQL_DB }}"
        template: 'template0'
        state: present

    - name: "Create db user"
      postgresql_user:
        state: present
        name: "{{ PSQL_USER }}"
        password: "{{ PSQL_PASSWD }}"
      become: yes
      become_user: postgres

    - name: "Grant db user access to app db"
      postgresql_privs:
        type: database
        database: "{{ PSQL_DB }}"
        roles: "{{ PSQL_USER }}"
        grant_option: no
        privs: all
      become: yes
      become_user: postgres
      notify: restart postgres

    # - name: "Allow md5 connection for the db user"
    #   postgresql_pg_hba:
    #     dest: "/var/lib/pgsql/data/pg_hba.conf"
    #     contype: host
    #     databases: all
    #     method: md5
    #     users: "{{ PSQL_USER }}"
    #     create: true
    #   become: yes
    #   become_user: postgres
    #   notify: restart postgres

  handlers:
    - name: restart postgres
      service:
        name: postgresql
        state: restarted
