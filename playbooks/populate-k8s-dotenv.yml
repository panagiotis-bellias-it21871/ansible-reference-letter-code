---
- name: Configure reference-letters-system dotenv variables
  hosts: localhost
  vars:
    system_dir: "{{user_dir}}/reference-letters-system"
    git_repo_url: "https://github.com/panagiotis-bellias-it21871/reference-letters-system.git"
    git_repo_branch: "main"
  become: yes
  become_user: root
  tasks:
    - name: ensure github.com is a known host
      lineinfile:
          dest: "{{user_dir}}/.ssh/known_hosts"
          create: yes
          state: present
          line: "{{lookup('pipe', 'ssh-keyscan -t rsa github.com')}}"
          regexp: "^github\\.com"

    - name: clone reference letters project
      git:
          repo: "{{git_repo_url}}"
          version: "{{git_repo_branch}}"
          clone: yes
          track_submodules: yes
          force: yes
          dest: "{{system_dir}}"
      changed_when: true
    
    - name: copy backend env file
      shell: "cp {{system_dir}}/{{BACKEND_DIR}}/ref_letters/.env.docker.example {{system_dir}}/{{BACKEND_DIR}}/ref_letters/.env"

    - name: populate backend ~/.env url
      lineinfile:
          dest: "{{system_dir}}/{{BACKEND_DIR}}/ref_letters/.env"
          state: present
          regexp: "^DATABASE_URL="
          line: "DATABASE_URL={{DATABASE_URL}}"

    - name: populate backend ~/.env origins
      lineinfile:
          dest: "{{system_dir}}/{{BACKEND_DIR}}/ref_letters/.env"
          state: present
          regexp: "^ORIGINS="
          line: "ORIGINS={{ORIGINS}}"
    
    - name: populate backend ~/.env secret
      lineinfile:
          dest: "{{system_dir}}/{{BACKEND_DIR}}/ref_letters/.env"
          state: present
          regexp: "^SECRET="
          line: "SECRET={{SECRET}}"
    
    - name: populate backend ~/.env mail_username
      lineinfile:
          dest: "{{system_dir}}/{{BACKEND_DIR}}/ref_letters/.env"
          state: present
          regexp: "^MAIL_USERNAME="
          line: "MAIL_USERNAME={{MAIL_USERNAME}}"
    
    - name: populate backend ~/.env mail_password
      lineinfile:
          dest: "{{system_dir}}/{{BACKEND_DIR}}/ref_letters/.env"
          state: present
          regexp: "^MAIL_PASSWORD="
          line: "MAIL_PASSWORD={{MAIL_PASSWORD}}"
    
    - name: populate backend ~/.env mail_from
      lineinfile:
          dest: "{{system_dir}}/{{BACKEND_DIR}}/ref_letters/.env"
          state: present
          regexp: "^MAIL_FROM="
          line: "MAIL_FROM={{MAIL_FROM}}"
    
    - name: populate backend ~/.env mail_port
      lineinfile:
          dest: "{{system_dir}}/{{BACKEND_DIR}}/ref_letters/.env"
          state: present
          regexp: "^MAIL_PORT="
          line: "MAIL_PORT={{MAIL_PORT}}"
    
    - name: populate backend ~/.env mail_server
      lineinfile:
          dest: "{{system_dir}}/{{BACKEND_DIR}}/ref_letters/.env"
          state: present
          regexp: "^MAIL_SERVER="
          line: "MAIL_SERVER={{MAIL_SERVER}}"
    
    - name: populate backend ~/.env mail_from_name
      lineinfile:
          dest: "{{system_dir}}/{{BACKEND_DIR}}/ref_letters/.env"
          state: present
          regexp: "^MAIL_FROM_NAME="
          line: "MAIL_FROM_NAME={{MAIL_FROM_NAME}}"

    - name: copy vuejs env file
      shell: "cp {{system_dir}}/{{FRONTEND_DIR}}/.env.example {{system_dir}}/'{{FRONTEND_DIR}}'/.env"

    - name: populate vuejs ~/.env backend url value
      lineinfile:
          dest: "{{system_dir}}/{{FRONTEND_DIR}}/.env"
          state: present
          regexp: "^VUE_APP_BACKEND_URL="
          line: "VUE_APP_BACKEND_URL={{VUE_APP_BACKEND_URL}}"

    - name: populate vuejs ~/.env base endpoint prefix value
      lineinfile:
          dest: "{{system_dir}}/{{FRONTEND_DIR}}/.env"
          state: present
          regexp: "^VUE_APP_BASE_ENDPOINT_PREFIX="
          line: "VUE_APP_BASE_ENDPOINT_PREFIX={{VUE_APP_BASE_ENDPOINT_PREFIX}}"

    - name: populate vuejs ~/.env rl letters endpoint value
      lineinfile:
          dest: "{{system_dir}}/{{FRONTEND_DIR}}/.env"
          state: present
          regexp: "^VUE_APP_RL_LETTERS_ENDPOINT="
          line: "VUE_APP_RL_LETTERS_ENDPOINT={{VUE_APP_RL_LETTERS_ENDPOINT}}"

    - name: populate vuejs ~/.env auth endpoint prefix value
      lineinfile:
          dest: "{{system_dir}}/{{FRONTEND_DIR}}/.env"
          state: present
          regexp: "^VUE_APP_AUTH_ENDPOINT_PREFIX="
          line: "VUE_APP_AUTH_ENDPOINT_PREFIX={{VUE_APP_AUTH_ENDPOINT_PREFIX}}"

    - name: populate vuejs ~/.env auth login endpoint value
      lineinfile:
          dest: "{{system_dir}}/{{FRONTEND_DIR}}/.env"
          state: present
          regexp: "^VUE_APP_AUTH_LOGIN_ENDPOINT="
          line: "VUE_APP_AUTH_LOGIN_ENDPOINT={{VUE_APP_AUTH_LOGIN_ENDPOINT}}"